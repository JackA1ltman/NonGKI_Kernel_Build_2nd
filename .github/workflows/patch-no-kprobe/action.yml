name: 'Patch Kernel for no-kprobe.'

runs:
  using: 'composite'
  steps:
      - name: Patch Kernel for no-kprobe
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/device_kernel
          if grep -q "CONFIG_KSU" "fs/exec.c"; then
            echo "Your kernel source code appears to have been manually patched, so this step is skipped."

          elif [[ ${{ env.HOOK_METHOD }} == "normal" ]]; then
            cp /tmp/Patches/normal_hook_patches.sh ./
            cp /tmp/Patches/backport_patches_early.sh ./

            bash normal_hook_patches.sh ./
            bash backport_patches_early.sh

            echo "execuated normal hook and backport patch successfully."

          elif [[ ${{ env.HOOK_METHOD }} == "syscall" ]]; then
            if [[ "${{ env.HOOK_OLDER }}" == "true" ]]; then
                cp /tmp/Patches/syscall_hook_patches_older.sh ./
                bash syscall_hook_patches_older.sh ./

                echo "execuated syscall hook older successfully."
            else
                cp /tmp/Patches/syscall_hook_patches.sh ./
                bash syscall_hook_patches.sh ./

                echo "execuated syscall hook successfully."
            fi

            cp /tmp/Patches/backport_patches.sh ./
            bash backport_patches.sh

            echo "execuated backport patch successfully."

          elif [[ ${{ env.HOOK_METHOD }} == "tracepoint" ]]; then
            cp /tmp/Patches/tracepoint_hook_patches.sh ./
            cp /tmp/Patches/backport_patches.sh ./

            bash tracepoint_hook_patches.sh ./
            bash backport_patches.sh

            echo "execuated tracepoint hook and backport patch successfully."

          else
            echo "please input vaild option!"
            false

          fi

